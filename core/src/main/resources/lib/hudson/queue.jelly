<!--
The MIT License

Copyright (c) 2004-2009, Sun Microsystems, Inc., Kohsuke Kawaguchi, Tom Huybrechts, Yahoo! Inc.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-->

<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">
  <st:documentation> <![CDATA[
    Displays the build queue as <l:pane>
    ]]>
    <st:attribute name="items" use="required">
      Queue items to be displayed. Normally you should specify ${app.queue.items},
      but for example you can specify a sublist after some filtering to narrow down
      the list.
    </st:attribute>
    <st:attribute name="filtered" use="optional">
      Indicates that the queue has been filtered, i.e. might not show all items.
    </st:attribute>
  </st:documentation>
  <t:setIconSize/>
  <j:choose>
    <j:when test="${filtered}">
      <j:set var="title" value="${%Filtered Build Queue(items.size())}" />
    </j:when>
    <j:otherwise>
      <j:set var="title" value="${%Build Queue(items.size())}" />
    </j:otherwise>
  </j:choose>

  <l:card title="${title}" id="buildQueue">
    <st:adjunct includes="lib.form.link.link"/>
    <j:if test="${app.quietingDown}">
      <div>
        ${%Jenkins is going to shut down. No further builds will be performed.}
        <j:if test="${h.hasPermission(app.MANAGE)}">
          <f:link href="${rootURL}/cancelQuietDown" post="true">(${%cancel})</f:link>
        </j:if>
      </div>
    </j:if>
    <j:choose>
      <j:when test="${empty(items)}">
        <j:if test="${!app.quietingDown}">
          <div>
            ${%No builds in the queue.}
          </div>
        </j:if>
      </j:when>
      <j:otherwise>
        <j:forEach var="item" items="${items}">
          <div class="queue-item">
            <div>
              <j:set var="stuck" value="${item.isStuck()}"/>
              <j:choose>
                <j:when test="${h.hasPermission(item.task,item.task.READ)}">
                  <a href="${rootURL}/${item.task.url}">
                    <div class="nothelping">Scalemate</div>
                    <j:choose>
                      <j:when test="${item.displayName.contains('part of')}">
                        <l:breakable value="gf-2312/add-new-smcr-category" />
                      </j:when>
                      <j:otherwise>
                        <l:breakable value="${item.displayName}" />
                      </j:otherwise>
                    </j:choose>
                  </a>
<!--                  <div>-->
<!--                    ${item.causesDescription}  ${item.params} \n ${%WaitingFor(item.inQueueForString)}-->
<!--                  </div>-->
                </j:when>
                <j:otherwise>
                  <span>${%Unknown Task}</span>
                </j:otherwise>
              </j:choose>
            </div>
            <div>
              <!-- TODO include estimated number as in BuildHistoryWidget/entries.jelly if possible -->
<!--              <j:if test="${stuck}">-->
<!--                <a href="https://www.jenkins.io/redirect/troubleshooting/executor-starvation" class="jenkins-button jenkins-button&#45;&#45;tertiary" tooltip="${item.why}">-->
<!--                  <l:icon src="symbol-hourglass" />-->
<!--                </a>-->
<!--              </j:if>-->
              <button data-href="${rootURL}/${item.task.url}" class="banana jenkins-button jenkins-button--tertiary" tooltip="More actions">
                <l:icon src="symbol-information-circle" />
              </button>
              <j:if test="${item.hasCancelPermission()}">
                <l:stopButton href="${rootURL}/queue/cancelItem?id=${item.id}" confirm="${%confirm(item.displayName)}" alt="${%Cancel build}"/>
              </j:if>
            </div>
          </div>
        </j:forEach>
      </j:otherwise>
    </j:choose>
  </l:card>

  <!-- schedule updates only for the full page reload -->
  <j:if test="${ajax==null and h.hasPermission(app.READ)}">
    <div class="widget-refresh-reference" data-id="buildQueue" data-url="${rootURL}/${it.url}ajax"/>
    <st:adjunct includes="lib.hudson.widget-refresh"/>
  </j:if>
</j:jelly>
